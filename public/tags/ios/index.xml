<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ios on Tony</title>
    <link>https://toony.ml/tags/ios/index.xml</link>
    <description>Recent content in Ios on Tony</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>tonghuan.li0@gmail.com (@Tony)</managingEditor>
    <webMaster>tonghuan.li0@gmail.com (@Tony)</webMaster>
    <atom:link href="https://toony.ml/tags/ios/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>iOS - 日期处理</title>
      <link>https://toony.ml/post/iOS-%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86/</link>
      <pubDate>Wed, 28 Feb 2018 00:00:00 +0000</pubDate>
      <author>tonghuan.li0@gmail.com (@Tony)</author>
      <guid>https://toony.ml/post/iOS-%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86/</guid>
      <description>

&lt;h2 id=&#34;日期格式&#34;&gt;&lt;strong&gt;日期格式&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;年&lt;/strong&gt;
* y 将年份(0~9)显示为不带前导零的数字
* yy 已带前导零的两位数字格式化显示年份&lt;/p&gt;

&lt;h2 id=&#34;yyy-yyyy-以四位数字格式显示年份&#34;&gt;* yyy / yyyy 以四位数字格式显示年份&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;月&lt;/strong&gt;
* M 将月份显示为不带前导零的数字(eg: 一月 即 1)
* MM 将月份显示为带前导零的数字(eg: 01/12/01)
* MMM 将月份显示为缩写形式(eg: Jan)&lt;/p&gt;

&lt;h2 id=&#34;mmmm-将月份显示为完整月份名-eg-january&#34;&gt;* MMMM 将月份显示为完整月份名(eg: January)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;日&lt;/strong&gt;
* d (eg: 1)&lt;/p&gt;

&lt;h2 id=&#34;dd-eg-01&#34;&gt;* dd (eg: 01)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;星期&lt;/strong&gt;
* EEE (eg: Sun)&lt;/p&gt;

&lt;h2 id=&#34;eeee-eg-sunday&#34;&gt;* EEEE (eg: Sunday)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;小时&lt;/strong&gt;
* h 12小时制 (eg: 1:15:15 PM)
* hh 12小时制 (eg: 01:15:15 PM)
* H 24小时制 (eg: 1:15:15)&lt;/p&gt;

&lt;h2 id=&#34;hh-24小时制度-eg-13-15-15&#34;&gt;* HH 24小时制度 (eg: 13:15:15)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;分钟&lt;/strong&gt;
* m (eg: 12:1:15)&lt;/p&gt;

&lt;h2 id=&#34;mm-eg-12-01-15&#34;&gt;* mm (eg: 12:01:15)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;秒&lt;/strong&gt;
* s (eg: 12:15:5)
* ss (eg: 12:15:05)
* f 显示秒的小数部分
* ff 将精确到显示百分之一秒
* ffff 将精确显示到万分之一秒&lt;/p&gt;

&lt;h2 id=&#34;用户定义的格式最多可以使用七个f&#34;&gt;* 用户定义的格式最多可以使用七个f&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;上午下午&lt;/strong&gt;
* t 使用12小时制
* 中午之前用 A
* 中午之后用 P
* tt 使用12小时制
* 中午之前用 AM
* 中午之后用 PM&lt;/p&gt;

&lt;h2 id=&#34;注意-对于使用24小时制的不现实任何字符&#34;&gt;* 注意: 对于使用24小时制的不现实任何字符&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;时区&lt;/strong&gt;
* z 显示不带前导零的时区偏移量
* zz (eg: -08)&lt;/p&gt;

&lt;h2 id=&#34;zzz-显示完整的时区偏移量-eg-0800&#34;&gt;* zzz 显示完整的时区偏移量 (eg: -0800)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;纪元&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;gg-显示时代-纪元字符串-eg-a-d&#34;&gt;* gg 显示时代/纪元字符串 (eg: A.D.)&lt;/h2&gt;

&lt;h2 id=&#34;时间转换&#34;&gt;&lt;strong&gt;时间转换&lt;/strong&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;  // 日期转字符串
  static func tn_dateString(delta: TimeInterval) -&amp;gt; String {
    
        let date = Date(timeIntervalSinceNow: delta)
        // 指定日期格式
        dateFormatter.dateFormat = &amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;
        return dateFormatter.string(from: date)
        
    }
    
  //字符串转日期
  static func tn_sinaDate(string: String) -&amp;gt; Date? {
      
      // 1. 设置日期格式
      dateFormatter.dateFormat = &amp;quot;EEE MMM dd HH:mm:ss zzz yyyy&amp;quot;
      
      // 2. 转换并且返回日期
      return dateFormatter.date(from: string)
  }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>